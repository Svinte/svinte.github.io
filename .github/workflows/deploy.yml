name: Update pinned, translate and deploy site

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 3 */3 * *"
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  update-pinned:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Fetch pinned repos
        run: npm run fetch:pinned
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate language colors via Gemini
        run: npm run colors:update
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

      - name: Generate pinned translations
        run: npm run translate:pinned
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

      - name: Generate content translations
        run: npm run translate:content
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

      - name: Commit changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add src/assets/pinned.json src/locales
          git commit -m "chore: update pinned.json and translations" || echo "No changes"
          git push

  build:
    runs-on: ubuntu-latest
    needs: update-pinned
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build-only

      - name: Create 404.html fallback
        run: cp dist/index.html dist/404.html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    concurrency:
      group: github-pages
      cancel-in-progress: true
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh

      - name: Wait for previous Pages deployment if exists
        run: |
          if gh api repos/${GITHUB_REPOSITORY}/pages/deployment --silent > /dev/null 2>&1; then
            echo "Previous deployment exists. Waiting for completion..."
            prev_deploy=$(gh api repos/${GITHUB_REPOSITORY}/pages/deployment --jq '.status')
            while [ "$prev_deploy" = "in_progress" ] || [ "$prev_deploy" = "building" ]; do
              echo "Previous deployment status: $prev_deploy. Waiting 15s..."
              sleep 15
              prev_deploy=$(gh api repos/${GITHUB_REPOSITORY}/pages/deployment --jq '.status')
            done
            echo "No ongoing deployment. Proceeding..."
          else
            echo "No previous Pages deployment. Proceeding immediately."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
